program factorial.aleo;



function main:
    input r0 as u128.public;
    lte r0 34u128 into r1;
    assert.eq r1 true;
    lte 2u128 r0 into r2;
    mul 1u128 2u128 into r3;
    ternary r2 r3 1u128 into r4;
    lte 3u128 r0 into r5;
    mul r4 3u128 into r6;
    ternary r5 r6 r4 into r7;
    lte 4u128 r0 into r8;
    mul r7 4u128 into r9;
    ternary r8 r9 r7 into r10;
    lte 5u128 r0 into r11;
    mul r10 5u128 into r12;
    ternary r11 r12 r10 into r13;
    lte 6u128 r0 into r14;
    mul r13 6u128 into r15;
    ternary r14 r15 r13 into r16;
    lte 7u128 r0 into r17;
    mul r16 7u128 into r18;
    ternary r17 r18 r16 into r19;
    lte 8u128 r0 into r20;
    mul r19 8u128 into r21;
    ternary r20 r21 r19 into r22;
    lte 9u128 r0 into r23;
    mul r22 9u128 into r24;
    ternary r23 r24 r22 into r25;
    lte 10u128 r0 into r26;
    mul r25 10u128 into r27;
    ternary r26 r27 r25 into r28;
    lte 11u128 r0 into r29;
    mul r28 11u128 into r30;
    ternary r29 r30 r28 into r31;
    lte 12u128 r0 into r32;
    mul r31 12u128 into r33;
    ternary r32 r33 r31 into r34;
    lte 13u128 r0 into r35;
    mul r34 13u128 into r36;
    ternary r35 r36 r34 into r37;
    lte 14u128 r0 into r38;
    mul r37 14u128 into r39;
    ternary r38 r39 r37 into r40;
    lte 15u128 r0 into r41;
    mul r40 15u128 into r42;
    ternary r41 r42 r40 into r43;
    lte 16u128 r0 into r44;
    mul r43 16u128 into r45;
    ternary r44 r45 r43 into r46;
    lte 17u128 r0 into r47;
    mul r46 17u128 into r48;
    ternary r47 r48 r46 into r49;
    lte 18u128 r0 into r50;
    mul r49 18u128 into r51;
    ternary r50 r51 r49 into r52;
    lte 19u128 r0 into r53;
    mul r52 19u128 into r54;
    ternary r53 r54 r52 into r55;
    lte 20u128 r0 into r56;
    mul r55 20u128 into r57;
    ternary r56 r57 r55 into r58;
    lte 21u128 r0 into r59;
    mul r58 21u128 into r60;
    ternary r59 r60 r58 into r61;
    lte 22u128 r0 into r62;
    mul r61 22u128 into r63;
    ternary r62 r63 r61 into r64;
    lte 23u128 r0 into r65;
    mul r64 23u128 into r66;
    ternary r65 r66 r64 into r67;
    lte 24u128 r0 into r68;
    mul r67 24u128 into r69;
    ternary r68 r69 r67 into r70;
    lte 25u128 r0 into r71;
    mul r70 25u128 into r72;
    ternary r71 r72 r70 into r73;
    lte 26u128 r0 into r74;
    mul r73 26u128 into r75;
    ternary r74 r75 r73 into r76;
    lte 27u128 r0 into r77;
    mul r76 27u128 into r78;
    ternary r77 r78 r76 into r79;
    lte 28u128 r0 into r80;
    mul r79 28u128 into r81;
    ternary r80 r81 r79 into r82;
    lte 29u128 r0 into r83;
    mul r82 29u128 into r84;
    ternary r83 r84 r82 into r85;
    lte 30u128 r0 into r86;
    mul r85 30u128 into r87;
    ternary r86 r87 r85 into r88;
    lte 31u128 r0 into r89;
    mul r88 31u128 into r90;
    ternary r89 r90 r88 into r91;
    lte 32u128 r0 into r92;
    mul r91 32u128 into r93;
    ternary r92 r93 r91 into r94;
    lte 33u128 r0 into r95;
    mul r94 33u128 into r96;
    ternary r95 r96 r94 into r97;
    lte 34u128 r0 into r98;
    mul r97 34u128 into r99;
    ternary r98 r99 r97 into r100;
    output r100 as u128.private;
